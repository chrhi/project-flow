import { type NextPage } from "next";
import Head from "next/head";
import AddStakeHolder from "~/components/common/AddStakeHolder";
import { Row } from "~/components/common/Row";
import { Sidebar } from "~/components/ui/Sidebar";
import { TableHeader } from "~/components/ui/TableHeader";
import {loading_Reducer} from "~/store/app-reducer/loadingReducer"
import { toast } from "react-toastify";
import { api } from "~/utils/api";
import { useEffect } from "react";
import { Header } from "~/components/common/Header";
import { Paper } from "~/components/ui/Paper";
const Page: NextPage = () => {

  const stakeholders = api.stakeholder.getStakeholders.useQuery()
  const set_isLoading = loading_Reducer(state => state.set_isLoading)

  useEffect(()=>{
    if(!stakeholders.data){
      set_isLoading(true)
    }else{
      set_isLoading(false)
    }
    if(stakeholders.error){
      toast("something went wrong",{
        className:" !text-white !bg-gradient-to-r !from-sky-300 !to-indigo-600",
        hideProgressBar: true,
       })
       set_isLoading(false)

       
    }

    
  },[set_isLoading , stakeholders.data ,stakeholders.error ])

  return (
    <>
      <Head>
      <title>Sonatrach</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
        <link rel="manifest" href="/site.webmanifest" />
      </Head>
      <Header />
      <main className=" custopn-page-height  flex w-full bg-gray-50 ">
       <Sidebar />
       <div className="ml-[16rem] flex flex-col items-center  custom-width h-fit min-h-screen">
{/*       
       all the contenet goes in here */}
      
    <div className='w-full h-[50px] flex items-center justify-between  p-8 my-4 '>
         <div>
              <h1 className='font-bold text-gray-900 text-2xl '>ðŸ‘‰startup/stakeholders </h1>
        </div>
              <AddStakeHolder />
    </div>
       <Paper>
    <TableHeader />
    {/* <Row /> */}
   {stakeholders.data?.data?.length &&
   stakeholders.data?.data?.length > 0  && 
   // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
   stakeholders.data?.data.map((item) => <Row   key={item.name } name={item?.name} title={item?.title} role={item?.role}  /> )}
        {/* this is the end of the page */}
        </Paper>
       </div>
     
      </main>
    </>
  );
};

export default Page;