
import { type NextPage } from "next";
import Head from "next/head";
import {  useState } from "react";
import { toast } from "react-toastify";
import BoardContainer from "~/components/board/BoardContainer";
import { TaskType } from "~/components/board/Task";
import { Header } from "~/components/common/Header";
import { ExecutingSidebar } from "~/components/sideBars/ExecutingSidebar";
import { AssignTaskPopUp } from "~/components/ui/plusTable/executing/AssignTaskPopUp";
import { ChangeStatusPopUp } from "~/components/ui/plusTable/executing/ChangeStatusPopUp";
import { StakeHolder } from "~/components/ui/popup/StakeHolder";
import { AbdullahTable, ItemTable } from "~/components/ui/used/AbdullahTable";
import { Form } from "~/components/ui/used/Form";
import { FormContainer } from "~/components/ui/used/FormContainer";
import { FormHead } from "~/components/ui/used/FormHead";
import { getProjectMetaData } from "~/lib/MetaData";
import { loading_Reducer } from "~/store/app-reducer/loadingReducer";
import { task } from "~/types/type";
import { api } from "~/utils/api";

const tasksTyped : TaskType[] =[
  {
    id : "12343",
    title : "Pipeline and Transportation" , 
    discription : "Sonatrach can manage the transportation of oil and gas through pipelines and other means. This includes constructing and maintaining pipelines, monitoring transportation operations, and ensuring safe and efficient delivery of resources " , 
    priority : "decrease",
    status : "TODO"
  },
  {
    id : "1234566" , 
    title : "make me happy ",
    priority : "increase",
    status : "DONE"
  } , 
  {
  id : "9776",
  title : "Pipeline and Transportation" , 
  discription : "Sonatrach can manage the transportation of oil and gas through pipelines and other means. This includes constructing and maintaining pipelines, monitoring transportation operations, and ensuring safe and efficient delivery of resources " , 
  priority : "decrease",
  status : "DOING"
 },
 {
  id : "67" , 
  title : "this is the calnel ",
  priority : "increase",
  status : "CANCEL"
} , 
 

]


const Page: NextPage = () => {
  const [isOpen , setIsOpen] = useState<boolean>(true)
  const [tasks , setTasks ] = useState<task[]>([])
 
  const set_loading = loading_Reducer(state => state.set_isLoading)

  // get all the tasks 
  const tasksGet = api.tasksRouter.getAllTasks.useQuery({project_id : getProjectMetaData()},{
    onSuccess(data) {
      setTasks(data as task[])
      set_loading(false)
    },
    onError(err) {
      console.log(err)
      toast("error fetching the tasks  ",{
        className:" !text-white !bg-blue-500",
        hideProgressBar: true,
       })
       set_loading(false)
       },
  })
  // useEffect(() => {
  //   if( tasksGet.isFetching  ){
  //     set_loading(true)
  //   }
  // }, [   set_loading , tasksGet.isFetching ])

  // prepare the items to be handled by the table
  // AssignTaskPopUp
  // const satisfieTable = () : ItemTable[] => {
  //   const array : ItemTable[] =  tasks.map(item => {
  //     return  {
  //       id : item.id ,
  //       callback : (id : string) => console.log(id),
  //       properties : [item.name , item.status, <ChangeStatusPopUp refetch={tasksGet.refetch} taskName={item.name} id={item.id} key={item.id} />]
  //     } 
  //   })
  //   return array
  // }
  return (
    <>
      <Head>
      <title>ProjectFlow</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
        <link rel="manifest" href="/site.webmanifest" />
      </Head>
      <Header />
      <main className=" custopn-page-height overflow-y-auto  flex w-full bg-gray-50 ">
       <ExecutingSidebar isOpen={isOpen} setIsOpen={setIsOpen} />
      <div className={` ${isOpen ? "ml-[20rem]" : "ml-[0]"} w-full overflow-y-auto  h-fit min-h-[400px]`}>
        <div className="w-full h-[50px] flex items-center pl-4 justify-start">
            <h1 className="text-xl font-bold text-gray-900 "> ðŸ‘¾ Tasks Tracking Board</h1>
        </div>
        <BoardContainer   tasks={tasksTyped}/>
      </div>
      </main>
    </>
  );
};

export default Page;